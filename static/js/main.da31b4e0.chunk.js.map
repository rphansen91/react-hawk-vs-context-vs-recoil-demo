{"version":3,"sources":["Components/Counter/index.tsx","ContextCounter/index.tsx","todoUtils.tsx","DataHocTodos/controls.tsx","Components/Todos/List.tsx","Components/Todos/Item.tsx","Components/Todos/Create.tsx","Components/Todos/Update.tsx","DataHocTodos/index.tsx","RecoilTodos/atoms.tsx","RecoilTodos/index.tsx","RecoilTodos/actions.tsx","RecoilCounter/index.tsx","HawkTodos/state.tsx","HawkTodos/index.tsx","HawkTodos/actions.tsx","HawkCounter/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Counter","title","value","helperText","onIncrease","onDecrease","Paper","style","width","CardHeader","Divider","Box","p","display","alignItems","mr","Fab","onClick","size","FormHelperText","TextField","variant","disabled","fullWidth","ml","CounterContext","createContext","setValue","console","warn","CounterProvider","children","useState","Provider","ContextCounter","count","useContext","even","decrease","n","v","useDecrease","increase","useIncrease","wait","time","Promise","res","setTimeout","buildTodo","text","complete","id","uuid","alphabet","range","charCodeAt","map","code","String","fromCharCode","initialTodoList","start","end","i","push","DataHocTodoListControls","contextControllerHOC","createText","setCreateText","updateText","setUpdateText","page","setPage","perPage","setPerPage","useAsyncState","create","createActions","save","saveActions","updating","setUpdating","todoList","setTodoList","pagedTodoCount","Math","ceil","length","pagedTodoList","slice","createTodo","a","setLoading","Error","newTodo","list","concat","setData","setError","message","saveTodo","todo","update","todoIndex","findIndex","_todo","newList","closeUpdate","updateTodo","removeTodo","filter","toggleTodo","action","footer","List","CardActions","justifyContent","ListItem","button","key","Checkbox","checked","onChange","ListItemText","primary","primaryTypographyProps","color","textDecoration","ListItemSecondaryAction","IconButton","setText","loading","error","onSubmit","ev","preventDefault","label","target","Boolean","type","LoadingFab","props","position","CircularProgress","top","left","height","open","saveText","onClose","Dialog","maxWidth","DialogTitle","DialogContent","DialogActions","Button","LinearProgress","DataHocTodoList","Context","Consumer","controls","Pagination","nextPage","createTextState","atom","default","createState","data","updateTextState","saveState","updatingState","todoListState","pageState","perPageState","pagedTodoCountState","selector","get","pagedTodoListState","RecoilList","useRecoilValue","pageCount","useSetRecoilState","setCreate","useCreateTodo","useUpdateTodo","useToggleTodo","useRemoveTodo","RecoilUpdate","setSave","useSaveTodo","useCloseUpdate","RecoilTodoList","counterState","isEvenState","RecoilCounter","setCounter","hawk","hawkeye","log","HawkList","useHawkState","useHawkSetState","HawkUpdate","HawkTodoList","HawkCounter","background","App","href","right","src","className","alt","data-recalc-dims","padding","flexDirection","boxSizing","Typography","Grid","container","spacing","item","xs","md","paddingTop","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.da31b4e0.chunk.js","sourcesContent":["import React from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Box from \"@material-ui/core/Box\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport RemoveIcon from \"@material-ui/icons/Remove\";\nimport Divider from \"@material-ui/core/Divider\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport { TextField } from \"@material-ui/core\";\n\ninterface CounterProps {\n  title: string;\n  value: number;\n  helperText: string;\n  onIncrease: () => any;\n  onDecrease: () => any;\n}\n\nconst Counter = ({\n  title,\n  value,\n  helperText,\n  onIncrease,\n  onDecrease,\n}: CounterProps) => {\n  return (\n    <Paper style={{ width: \"100%\" }}>\n      <CardHeader title={title} />\n      <Divider />\n      <Box p={2} display=\"flex\" alignItems=\"center\">\n        <Box mr={1}>\n          <Fab onClick={onDecrease} size=\"small\">\n            <RemoveIcon />\n          </Fab>\n          <FormHelperText>&nbsp;</FormHelperText>\n        </Box>\n        <TextField\n          variant=\"outlined\"\n          size=\"small\"\n          value={value}\n          disabled\n          helperText={helperText}\n          fullWidth\n        />\n        <Box ml={1}>\n          <Fab onClick={onIncrease} size=\"small\">\n            <AddIcon />\n          </Fab>\n          <FormHelperText>&nbsp;</FormHelperText>\n        </Box>\n      </Box>\n    </Paper>\n  );\n};\n\nexport default Counter;\n","import React, {\n  createContext,\n  useContext,\n  useState,\n  FC,\n  Dispatch,\n  SetStateAction,\n} from \"react\";\nimport Counter from \"../Components/Counter\";\n\nconst CounterContext = createContext<{\n  value: number;\n  setValue: Dispatch<SetStateAction<number>>;\n}>({\n  value: 0,\n  setValue: (n = 1) => console.warn(\"CounterProvider not supplied\"),\n});\n\nconst useCounterValue = () => {\n  const { value } = useContext(CounterContext);\n  return value;\n};\n\nconst useCounterIsEven = () => {\n  const { value } = useContext(CounterContext);\n  return value % 2 ? \"odd\" : \"even\";\n};\n\nconst useDecrease = () => {\n  const { setValue } = useContext(CounterContext);\n  const decrease = (n = 1) => {\n    setValue((v) => v - n);\n  };\n  return decrease;\n};\n\nconst useIncrease = () => {\n  const { setValue } = useContext(CounterContext);\n  const increase = (n = 1) => {\n    setValue((v) => v + n);\n  };\n  return increase;\n};\n\nexport const CounterProvider: FC = ({ children }) => {\n  const [value, setValue] = useState(0);\n  return (\n    <CounterContext.Provider value={{ value, setValue }}>\n      {children}\n    </CounterContext.Provider>\n  );\n};\n\nexport const ContextCounter = () => {\n  const count = useCounterValue();\n  const even = useCounterIsEven();\n  const decrease = useDecrease();\n  const increase = useIncrease();\n  return (\n    <Counter\n      title=\"Context Counter\"\n      value={count}\n      helperText={`${count} is ${even}`}\n      onIncrease={() => increase(1)}\n      onDecrease={() => decrease(1)}\n    />\n  );\n};\n\nexport default ContextCounter\n","import { v4 as uuid } from 'uuid'\n\nexport interface ITodo {\n  id: string;\n  text: string;\n  complete: boolean;\n}\n\nexport function generateId () {\n  return uuid()\n}\n\nexport function wait (time = 0) {\n  return new Promise((res) => setTimeout(() => res(), time))\n}\n\nexport function buildTodo (text: string): ITodo {\n  return {\n    text,\n    complete: false,\n    id: generateId(),\n  }\n}\n\nconst alphabet = range('a'.charCodeAt(0), 'z'.charCodeAt(0)).map((code) => String.fromCharCode(code))\nconst numbers = range(0, 1e6)\nexport const initialTodoList = alphabet.map((text) => buildTodo(text))\n\nfunction range (start: number, end: number) {\n  const range = []\n  for (let i = start; i <= end; i++) {\n    range.push(i)\n  }\n  return range\n}","import { useState } from \"react\";\nimport { contextControllerHOC, useAsyncState } from \"data-hoc\";\nimport { ITodo, wait, initialTodoList, buildTodo } from \"../todoUtils\";\n\nexport const DataHocTodoListControls = contextControllerHOC(useTodoListControls);\nexport default DataHocTodoListControls\n\nexport function useTodoListControls() {\n  const [createText, setCreateText] = useState(\"\");\n  const [updateText, setUpdateText] = useState(\"\");\n  const [page, setPage] = useState(1);\n  const [perPage, setPerPage] = useState(10);\n  const [create, createActions] = useAsyncState<ITodo>();\n  const [save, saveActions] = useAsyncState<ITodo>();\n  const [updating, setUpdating] = useState<ITodo | null>(null);\n  const [todoList, setTodoList] = useState<ITodo[]>(initialTodoList);\n  const pagedTodoCount = Math.ceil(todoList.length / perPage);\n  const pagedTodoList = todoList.slice((page - 1) * perPage, (page - 1) * perPage + perPage)\n  const createTodo = async (text: string) => {\n    try {\n      createActions.setLoading();\n      if (!text) {\n        throw new Error(\"Text is required\");\n      }\n      const newTodo = buildTodo(text)\n      await wait(1000);\n      setTodoList((list) => list.concat(newTodo));\n      setCreateText(\"\");\n      createActions.setData(newTodo);\n      return newTodo;\n    } catch (e) {\n      createActions.setError(e.message);\n    }\n  };\n  const saveTodo = async (todo: ITodo | null, update: Partial<ITodo>) => {\n    try {\n      saveActions.setLoading();\n      const todoIndex = todoList.findIndex(_todo => todo === _todo)\n      if (todoIndex === -1) {\n        throw new Error(\"Todo not found\");\n      }\n      if (typeof update.text === 'string' && !update.text) {\n        throw new Error(\"Text is required\");\n      }\n      const newTodo = { ...todoList[todoIndex], ...update }\n      const newList = todoList.slice(0)\n      newList[todoIndex] = newTodo\n      await wait(1000);\n      setTodoList(newList);\n      closeUpdate();\n      saveActions.setData(newTodo);\n      return newTodo;\n    } catch (e) {\n      saveActions.setError(e.message);\n    }\n  };\n  const removeTodo = (todo: ITodo): ITodo => {\n    setTodoList((list) => list.filter((_todo) => todo !== _todo));\n    return todo;\n  };\n  const toggleTodo = (todo: ITodo): ITodo => {\n    setTodoList((list) =>\n      list\n        .slice(0)\n        .map((_todo) =>\n          todo !== _todo ? _todo : { ..._todo, complete: !_todo.complete }\n        )\n    );\n    return todo;\n  };\n  const updateTodo = (todo: ITodo) => {\n    setUpdateText(todo.text);\n    setUpdating(todo);\n  };\n  const closeUpdate = () => setUpdating(null);\n  return {\n    page,\n    setPage,\n    perPage,\n    setPerPage,\n    createText,\n    setCreateText,\n    updateText,\n    setUpdateText,\n    create,\n    save,\n    todoList,\n    pagedTodoCount,\n    pagedTodoList,\n    updating,\n    closeUpdate,\n    updateTodo,\n    createTodo,\n    removeTodo,\n    toggleTodo,\n    saveTodo,\n  };\n}\n","import CardActions from \"@material-ui/core/CardActions\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport Divider from \"@material-ui/core/Divider\";\nimport List from \"@material-ui/core/List\";\nimport Paper from \"@material-ui/core/Paper\";\nimport React, { ReactNode } from \"react\";\n\nexport interface ITodoListProps {\n  title: string;\n  action?: ReactNode\n  children?: ReactNode\n  footer?: ReactNode\n}\n\nexport default ({\n  title,\n  action,\n  children,\n  footer\n}: ITodoListProps) => {\n  return (\n    <Paper style={{ width: '100%' }}>\n      <CardHeader\n        title={title}\n        action={action}\n      />\n      <Divider />\n      <List>\n        {children}\n      </List>\n      <Divider />\n      <CardActions style={{ justifyContent: 'flex-end' }}>\n        {footer}\n      </CardActions>\n    </Paper>\n  );\n};\n","import Checkbox from \"@material-ui/core/Checkbox\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport React from \"react\";\nimport { ITodo } from \"../../todoUtils\";\n\nexport interface ITodoItemProps {\n  todo: ITodo;\n  updateTodo: (todo: ITodo) => any;\n  removeTodo: (todo: ITodo) => any;\n  toggleTodo: (todo: ITodo) => any;\n}\n\nexport default ({ todo, toggleTodo, updateTodo, removeTodo }: ITodoItemProps) => {\n  return (\n    <ListItem button onClick={() => toggleTodo(todo)} key={todo.id}>\n      <Checkbox checked={todo.complete} onChange={() => toggleTodo(todo)} />\n      <ListItemText\n        primary={todo.text}\n        primaryTypographyProps={\n          todo.complete\n            ? { color: \"secondary\", style: { textDecoration: \"line-through\" } }\n            : {}\n        }\n      />\n      <ListItemSecondaryAction>\n        <IconButton onClick={() => updateTodo(todo)}>\n          <EditIcon />\n        </IconButton>\n        <IconButton onClick={() => removeTodo(todo)}>\n          <CancelIcon />\n        </IconButton>\n      </ListItemSecondaryAction>\n    </ListItem>\n  );\n};\n","import Box from \"@material-ui/core/Box\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Fab, { FabProps } from \"@material-ui/core/Fab\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport TextField from \"@material-ui/core/TextField\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport React, { FC } from \"react\";\n\nexport interface ITodoCreateProps {\n  text: string;\n  setText: (text: string) => void;\n  createTodo: (text: string) => any;\n  loading?: boolean;\n  error?: string;\n}\n\nexport default ({\n  text,\n  setText,\n  createTodo,\n  loading,\n  error,\n}: ITodoCreateProps) => {\n  return (\n    <form\n      onSubmit={(ev) => {\n        ev.preventDefault();\n        createTodo(text);\n      }}\n    >\n      <Box display=\"flex\" alignItems=\"center\">\n        <TextField\n          variant=\"outlined\"\n          label=\"Create new item\"\n          value={text}\n          onChange={(ev) => setText(ev.target.value)}\n          helperText={error}\n          error={Boolean(error)}\n          size=\"small\"\n        />\n        <Box ml={1}>\n          <LoadingFab type=\"submit\" size=\"small\" color=\"primary\" loading={loading}>\n            <AddIcon />\n          </LoadingFab>\n          {error ? <FormHelperText>&nbsp;</FormHelperText> : null}\n        </Box>\n      </Box>\n    </form>\n  );\n};\n\nconst LoadingFab: FC<FabProps & { loading?: boolean }> = ({\n  disabled,\n  loading,\n  style,\n  children,\n  ...props\n}) => {\n  return (\n    <Fab\n      {...props}\n      disabled={disabled || loading}\n      style={{ position: \"relative\", ...style }}\n    >\n      {loading ? (\n        <CircularProgress\n          style={{\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            height: \"100%\",\n            width: \"100%\",\n          }}\n        />\n      ) : null}\n      {children}\n    </Fab>\n  );\n};\n","import React from \"react\";\nimport Dialog, { DialogProps } from \"@material-ui/core/Dialog\";\nimport DialogTitle, { DialogTitleProps } from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport Box from \"@material-ui/core/Box\";\n\nexport interface IUpdateTodoProps {\n  open: boolean;\n  onClose: () => any;\n  text: string;\n  setText: (v: string) => any;\n  saveText: (v: string) => any;\n  loading: boolean;\n  error: string;\n}\n\nexport default ({\n  open,\n  text,\n  setText,\n  saveText,\n  onClose,\n  loading,\n  error,\n}: IUpdateTodoProps) => {\n  return (\n    <Dialog open={open} onClose={onClose} maxWidth=\"sm\" fullWidth>\n      <DialogTitle>\n        Update item\n      </DialogTitle>\n      <DialogContent>\n        <form\n          onSubmit={(ev) => {\n            ev.preventDefault();\n            saveText(text);\n          }}\n        >\n          <TextField\n            variant=\"outlined\"\n            value={text}\n            onChange={(ev) => setText(ev.target.value)}\n            helperText={error}\n            error={Boolean(error)}\n            fullWidth\n          />\n        </form>\n      </DialogContent>\n      <DialogActions>\n        <Button variant=\"contained\" onClick={onClose}>\n          Close\n        </Button>\n\n        <Box ml={1}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => saveText(text)}\n            style={{ position: \"relative\" }}\n            disabled={loading}\n          >\n            {loading ? (\n              <LinearProgress\n                variant=\"indeterminate\"\n                style={{ position: \"absolute\", top: 0, left: 0, width: \"100%\" }}\n              />\n            ) : null}\n            Save\n          </Button>\n        </Box>\n      </DialogActions>\n    </Dialog>\n  );\n};\n","import React from \"react\";\nimport DataHocTodoControls from \"./controls\";\nimport TodoList from \"../Components/Todos/List\";\nimport TodoItem from \"../Components/Todos/Item\";\nimport TodoCreate from \"../Components/Todos/Create\";\nimport TodoUpdate from \"../Components/Todos/Update\";\nimport Pagination from \"@material-ui/lab/Pagination\";\n\nexport const DataHocTodoList = () => {\n  return (\n    <DataHocTodoControls.Provider>\n      <DataHocTodoControls.Context.Consumer>\n        {(controls) =>\n          controls ? (\n            <>\n              <TodoList\n                title=\"Context\"\n                action={\n                  <TodoCreate\n                    text={controls.createText}\n                    setText={controls.setCreateText}\n                    createTodo={controls.createTodo}\n                    loading={controls.create.loading}\n                    error={controls.create.error}\n                  />\n                }\n                footer={\n                  <Pagination\n                    page={controls.page}\n                    count={controls.pagedTodoCount}\n                    onChange={(ev, nextPage) => controls.setPage(nextPage)}\n                  />\n                }\n              >\n                {controls.pagedTodoList.map((todo) => (\n                  <TodoItem\n                    key={todo.id}\n                    todo={todo}\n                    toggleTodo={controls.toggleTodo}\n                    updateTodo={controls.updateTodo}\n                    removeTodo={controls.removeTodo}\n                  />\n                ))}\n              </TodoList>\n              <TodoUpdate\n                open={Boolean(controls.updating)}\n                text={controls.updateText}\n                setText={controls.setUpdateText}\n                saveText={(text) =>\n                  controls.saveTodo(controls.updating, { text })\n                }\n                onClose={controls.closeUpdate}\n                loading={controls.save.loading}\n                error={controls.save.error}\n              />\n            </>\n          ) : null\n        }\n      </DataHocTodoControls.Context.Consumer>\n    </DataHocTodoControls.Provider>\n  );\n};\n","import { atom, selector } from \"recoil\";\nimport { ITodo, initialTodoList } from \"../todoUtils\";\n\ninterface Async<V> {\n  loading: boolean;\n  data: V | null;\n  error: string;\n}\n\nexport const createTextState = atom<string>({\n  key: \"createText\",\n  default: \"\",\n});\n\nexport const createState = atom<Async<ITodo>>({\n  key: \"create\",\n  default: {\n    loading: false,\n    data: null,\n    error: \"\",\n  },\n});\n\nexport const updateTextState = atom<string>({\n  key: \"updateText\",\n  default: \"\",\n});\n\nexport const saveState = atom<Async<ITodo>>({\n  key: \"save\",\n  default: {\n    loading: false,\n    data: null,\n    error: \"\",\n  },\n});\n\nexport const updatingState = atom<null | ITodo>({\n  key: \"updating\",\n  default: null,\n});\n\nexport const todoListState = atom<ITodo[]>({\n  key: \"todoList\",\n  default: initialTodoList,\n});\n\nexport const pageState = atom<number>({\n  key: \"page\",\n  default: 1,\n});\n\nexport const perPageState = atom<number>({\n  key: \"perPage\",\n  default: 10,\n});\n\nexport const pagedTodoCountState = selector({\n  key: \"pagedTodoCountState\",\n  get: ({ get }) => {\n    const perPage = get(perPageState);\n    const list = get(todoListState);\n    return Math.ceil(list.length / perPage);\n  },\n});\n\nexport const pagedTodoListState = selector({\n  key: \"pagedTodoListState\",\n  get: ({ get }) => {\n    const page = get(pageState);\n    const perPage = get(perPageState);\n    const list = get(todoListState);\n    return list.slice((page - 1) * perPage, (page - 1) * perPage + perPage)\n  },\n});\n","import React, { FC } from \"react\";\nimport { useRecoilValue } from \"recoil\";\nimport {\n  todoListState,\n  createTextState,\n  createState,\n  saveState,\n  updatingState,\n  updateTextState,\n  pageState,\n  pagedTodoCountState,\n  pagedTodoListState,\n} from \"./atoms\";\nimport {\n  useCreateTodo,\n  useUpdateTodo,\n  useRemoveTodo,\n  useCloseUpdate,\n  useSaveTodo,\n  useToggleTodo,\n  useSetUpdateText,\n  useSetCreateText,\n  useSetPage,\n} from \"./actions\";\nimport TodoList from \"../Components/Todos/List\";\nimport TodoItem from \"../Components/Todos/Item\";\nimport TodoCreate from \"../Components/Todos/Create\";\nimport TodoUpdate from \"../Components/Todos/Update\";\nimport Pagination from \"@material-ui/lab/Pagination\";\n\nconst RecoilList = () => {\n  const page = useRecoilValue(pageState);\n  const createText = useRecoilValue(createTextState);\n  const create = useRecoilValue(createState);\n  const pageCount = useRecoilValue(pagedTodoCountState);\n  const pagedTodoList = useRecoilValue(pagedTodoListState);\n  const setPage = useSetPage();\n  const setCreateText = useSetCreateText();\n  const createTodo = useCreateTodo();\n  const updateTodo = useUpdateTodo();\n  const toggleTodo = useToggleTodo();\n  const removeTodo = useRemoveTodo();\n  return (\n    <TodoList\n      title=\"Recoil\"\n      action={\n        <TodoCreate\n          text={createText}\n          setText={setCreateText}\n          createTodo={createTodo}\n          loading={create.loading}\n          error={create.error}\n        />\n      }\n      footer={\n        <Pagination\n          page={page}\n          count={pageCount}\n          onChange={(ev, nextPage) => setPage(nextPage)}\n        />\n      }\n    >\n      {pagedTodoList.map((todo) => (\n        <TodoItem\n          key={todo.id}\n          todo={todo}\n          toggleTodo={toggleTodo}\n          updateTodo={updateTodo}\n          removeTodo={removeTodo}\n        />\n      ))}\n    </TodoList>\n  );\n};\n\nconst RecoilUpdate = () => {\n  const updating = useRecoilValue(updatingState);\n  const updateText = useRecoilValue(updateTextState);\n  const save = useRecoilValue(saveState);\n  const setUpdateText = useSetUpdateText();\n  const saveTodo = useSaveTodo();\n  const closeUpdate = useCloseUpdate();\n  return (\n    <TodoUpdate\n      open={Boolean(updating)}\n      text={updateText}\n      setText={setUpdateText}\n      saveText={(text) => saveTodo(updating, { text })}\n      onClose={closeUpdate}\n      loading={save.loading}\n      error={save.error}\n    />\n  );\n};\n\nexport const RecoilTodoList: FC = () => {\n  return (\n    <>\n      <RecoilList />\n      <RecoilUpdate />\n    </>\n  );\n};\n\nexport default RecoilTodoList;\n","import {\n  useRecoilValue,\n  useSetRecoilState,\n} from \"recoil\";\nimport { ITodo, wait, buildTodo } from \"../todoUtils\";\nimport {\n  todoListState,\n  createState,\n  createTextState,\n  saveState,\n  updateTextState,\n  updatingState,\n  pageState,\n  perPageState,\n} from \"./atoms\";\n\nexport const useSetPage = () => {\n  const setPage = useSetRecoilState(pageState);\n  return setPage\n}\nexport const useSetPerPage = () => {\n  const setPerPage = useSetRecoilState(perPageState);\n  return setPerPage\n}\n\nexport const useSetCreateText = () => {\n  const setCreateText = useSetRecoilState(createTextState);\n  return setCreateText\n}\n\nexport const useCreateTodo = () => {\n  const setTodoList = useSetRecoilState(todoListState);\n  const setCreateText = useSetRecoilState(createTextState);\n  const setCreate = useSetRecoilState(createState);\n  const createTodo = async (text: string) => {\n    try {\n      setCreate({ loading: true, data: null, error: '' })\n      if (!text) {\n        throw new Error(\"Text is required\");\n      }\n      const newTodo = buildTodo(text)\n      await wait(1000);\n      setTodoList((list) => list.concat(newTodo));\n      setCreateText(\"\");\n      setCreate({ loading: false, data: newTodo, error: '' })\n      return newTodo;\n    } catch (e) {\n      setCreate({ loading: false, data: null, error: e.message })\n    }\n  };\n  return createTodo;\n};\n\nexport const useSetUpdateText = () => {\n  const setUpdateText = useSetRecoilState(updateTextState);\n  return setUpdateText\n}\n\nexport const useSaveTodo = () => {\n  const todoList = useRecoilValue(todoListState);\n  const setTodoList = useSetRecoilState(todoListState);\n  const setUpdating = useSetRecoilState(updatingState);\n  const setSave = useSetRecoilState(saveState);\n  const saveTodo = async (todo: ITodo | null, update: Partial<ITodo>) => {\n    try {\n      setSave({ loading: true, data: null, error: '' })\n      const todoIndex = todoList.findIndex(_todo => todo === _todo)\n      if (todoIndex === -1) {\n        throw new Error(\"Todo not found\");\n      }\n      if (typeof update.text === 'string' && !update.text) {\n        throw new Error(\"Text is required\");\n      }\n      const newTodo = { ...todoList[todoIndex], ...update }\n      const newList = todoList.slice(0)\n      newList[todoIndex] = newTodo\n      await wait(1000);\n      setTodoList(newList);\n      setUpdating(null);\n      setSave({ loading: false, data: newTodo, error: '' })\n      return newTodo;\n    } catch (e) {\n      setSave({ loading: false, data: null, error: e.message })\n    }\n  };\n  return saveTodo;\n};\n\nexport const useRemoveTodo = () => {\n  const setTodoList = useSetRecoilState(todoListState);\n  const removeTodo = (todo: ITodo) => {\n    setTodoList((list) => list.filter((_todo) => todo !== _todo));\n    return todo;\n  };\n  return removeTodo;\n};\n\nexport const useToggleTodo = () => {\n  const setTodoList = useSetRecoilState(todoListState);\n  const toggleTodo = (todo: ITodo) => {\n    setTodoList((list) =>\n      list\n        .slice(0)\n        .map((_todo) =>\n          todo !== _todo ? _todo : { ..._todo, complete: !_todo.complete }\n        )\n    );\n    return todo;\n  };\n  return toggleTodo;\n};\n\nexport const useUpdateTodo = () => {\n  const setUpdateText = useSetRecoilState(updateTextState);\n  const setUpdating = useSetRecoilState(updatingState);\n  const updateTodo = (todo: ITodo) => {\n    setUpdateText(todo.text);\n    setUpdating(todo);\n  }\n  return updateTodo\n};\n\nexport const useCloseUpdate = () => {\n  const setUpdating = useSetRecoilState(updatingState);\n  const closeUpdate = () => {\n    setUpdating(null);\n  }\n  return closeUpdate\n};","\nimport React from 'react';\nimport { atom, selector, useRecoilValue, useSetRecoilState } from 'recoil';\nimport Counter from '../Components/Counter'\n\nconst counterState = atom({\n  key: 'counter',\n  default: 0\n});\n\nconst isEvenState = selector({\n  key: 'isEven',\n  get: ({ get }) => {\n    const count = get(counterState)\n    return count % 2 ? 'odd' : 'even'\n  }\n})\n\nconst useIncrease = () => {\n  const setCounter = useSetRecoilState(counterState)\n  const increase = (n = 1) => {\n    setCounter(count => count + n)\n  }\n  return increase\n}\n\nconst useDecrease = () => {\n  const setCounter = useSetRecoilState(counterState)\n  const decrease = (n = 1) => {\n    setCounter(count => count - n)\n  }\n  return decrease\n}\n\nexport const RecoilCounter = () => {\n  const count = useRecoilValue(counterState)\n  const even = useRecoilValue(isEvenState)\n  const decrease = useDecrease()\n  const increase = useIncrease()\n  return (\n    <Counter\n      title=\"Recoil Counter\"\n      value={count}\n      helperText={`${count} is ${even}`}\n      onIncrease={() => increase(1)}\n      onDecrease={() => decrease(1)}\n    />\n  );\n}","import { hawk, hawkeye } from \"react-hawk\";\nimport { ITodo, initialTodoList } from \"../todoUtils\";\n\ninterface Async<V> {\n  loading: boolean;\n  data: V | null;\n  error: string;\n}\n\nexport const createTextState = hawk<string>({\n  key: \"createText\",\n  default: \"\",\n});\n\nexport const createState = hawk<Async<ITodo>>({\n  key: \"create\",\n  default: {\n    loading: false,\n    data: null,\n    error: \"\",\n  },\n});\n\nexport const updateTextState = hawk<string>({\n  key: \"updateText\",\n  default: \"\",\n});\n\nexport const saveState = hawk<Async<ITodo>>({\n  key: \"save\",\n  default: {\n    loading: false,\n    data: null,\n    error: \"\",\n  },\n});\n\nexport const updatingState = hawk<null | ITodo>({\n  key: \"updating\",\n  default: null,\n});\n\nexport const todoListState = hawk<ITodo[]>({\n  key: \"todoList\",\n  default: initialTodoList,\n});\n\nexport const pageState = hawk<number>({\n  key: \"page\",\n  default: 1,\n});\n\nexport const perPageState = hawk<number>({\n  key: \"perPage\",\n  default: 10,\n});\n\nexport const pagedTodoCountState = hawkeye<number>({\n  key: \"pagedTodoCountState\",\n  get: ({ get }) => {\n    const perPage = get(perPageState);\n    const list = get(todoListState);\n    console.log(\"Get pagedTodoCountState\");\n    return Math.ceil(list.length / perPage);\n  },\n});\n\nexport const pagedTodoListState = hawkeye<ITodo[]>({\n  key: \"pagedTodoListState\",\n  get: ({ get }) => {\n    const page = get(pageState);\n    const perPage = get(perPageState);\n    const list = get(todoListState);\n    console.log(\"Get pagedTodoListState\");\n    return list.slice((page - 1) * perPage, (page - 1) * perPage + perPage);\n  },\n});\n","import React, { FC } from \"react\";\nimport { useHawkState } from \"react-hawk\";\nimport {\n  todoListState,\n  createTextState,\n  createState,\n  saveState,\n  updatingState,\n  updateTextState,\n  pageState,\n  pagedTodoCountState,\n  pagedTodoListState,\n} from \"./state\";\nimport {\n  useCreateTodo,\n  useUpdateTodo,\n  useRemoveTodo,\n  useCloseUpdate,\n  useSaveTodo,\n  useToggleTodo,\n  useSetUpdateText,\n  useSetCreateText,\n  useSetPage,\n} from \"./actions\";\nimport TodoList from \"../Components/Todos/List\";\nimport TodoItem from \"../Components/Todos/Item\";\nimport TodoCreate from \"../Components/Todos/Create\";\nimport TodoUpdate from \"../Components/Todos/Update\";\nimport Pagination from \"@material-ui/lab/Pagination\";\n\nconst HawkList = () => {\n  const page = useHawkState(pageState);\n  const createText = useHawkState(createTextState);\n  const create = useHawkState(createState);\n  const pageCount = useHawkState(pagedTodoCountState);\n  const pagedTodoList = useHawkState(pagedTodoListState);\n  const setPage = useSetPage();\n  const setCreateText = useSetCreateText();\n  const createTodo = useCreateTodo();\n  const updateTodo = useUpdateTodo();\n  const toggleTodo = useToggleTodo();\n  const removeTodo = useRemoveTodo();\n  return (\n    <TodoList\n      title=\"Hawk\"\n      action={\n        <TodoCreate\n          text={createText}\n          setText={setCreateText}\n          createTodo={createTodo}\n          loading={create.loading}\n          error={create.error}\n        />\n      }\n      footer={\n        <Pagination\n          page={page}\n          count={pageCount}\n          onChange={(ev, nextPage) => setPage(nextPage)}\n        />\n      }\n    >\n      {pagedTodoList.map((todo) => (\n        <TodoItem\n          key={todo.id}\n          todo={todo}\n          toggleTodo={toggleTodo}\n          updateTodo={updateTodo}\n          removeTodo={removeTodo}\n        />\n      ))}\n    </TodoList>\n  );\n};\n\nconst HawkUpdate = () => {\n  const updating = useHawkState(updatingState);\n  const updateText = useHawkState(updateTextState);\n  const save = useHawkState(saveState);\n  const setUpdateText = useSetUpdateText();\n  const saveTodo = useSaveTodo();\n  const closeUpdate = useCloseUpdate();\n  return (\n    <TodoUpdate\n      open={Boolean(updating)}\n      text={updateText}\n      setText={setUpdateText}\n      saveText={(text) => saveTodo(updating, { text })}\n      onClose={closeUpdate}\n      loading={save.loading}\n      error={save.error}\n    />\n  );\n};\n\nexport const HawkTodoList: FC = () => {\n  return (\n    <>\n      <HawkList />\n      <HawkUpdate />\n    </>\n  );\n};\n\nexport default HawkTodoList;\n","import { useHawkState, useHawkSetState } from \"react-hawk\";\nimport { ITodo, wait, buildTodo } from \"../todoUtils\";\nimport {\n  todoListState,\n  createState,\n  createTextState,\n  saveState,\n  updateTextState,\n  updatingState,\n  pageState,\n  perPageState,\n} from \"./state\";\n\nexport const useSetPage = () => {\n  const setPage = useHawkSetState(pageState);\n  return setPage;\n};\nexport const useSetPerPage = () => {\n  const setPerPage = useHawkSetState(perPageState);\n  return setPerPage;\n};\n\nexport const useSetCreateText = () => {\n  const setCreateText = useHawkSetState(createTextState);\n  return setCreateText;\n};\n\nexport const useCreateTodo = () => {\n  const setTodoList = useHawkSetState(todoListState);\n  const setCreateText = useHawkSetState(createTextState);\n  const setCreate = useHawkSetState(createState);\n  const createTodo = async (text: string) => {\n    try {\n      setCreate({ loading: true, data: null, error: \"\" });\n      if (!text) {\n        throw new Error(\"Text is required\");\n      }\n      const newTodo = buildTodo(text);\n      await wait(1000);\n      setCreateText(\"\");\n      setCreate({ loading: false, data: newTodo, error: \"\" });\n      setTodoList((list) => list.concat(newTodo));\n      return newTodo;\n    } catch (e) {\n      setCreate({ loading: false, data: null, error: e.message });\n    }\n  };\n  return createTodo;\n};\n\nexport const useSetUpdateText = () => {\n  const setUpdateText = useHawkSetState(updateTextState);\n  return setUpdateText;\n};\n\nexport const useSaveTodo = () => {\n  const todoList = useHawkState(todoListState);\n  const setTodoList = useHawkSetState(todoListState);\n  const setUpdating = useHawkSetState(updatingState);\n  const setSave = useHawkSetState(saveState);\n  const saveTodo = async (todo: ITodo | null, update: Partial<ITodo>) => {\n    try {\n      setSave({ loading: true, data: null, error: \"\" });\n      const todoIndex = todoList.findIndex((_todo) => todo === _todo);\n      if (todoIndex === -1) {\n        throw new Error(\"Todo not found\");\n      }\n      if (typeof update.text === \"string\" && !update.text) {\n        throw new Error(\"Text is required\");\n      }\n      const newTodo = { ...todoList[todoIndex], ...update };\n      const newList = todoList.slice(0);\n      newList[todoIndex] = newTodo;\n      await wait(1000);\n      setTodoList(newList);\n      setUpdating(null);\n      setSave({ loading: false, data: newTodo, error: \"\" });\n      return newTodo;\n    } catch (e) {\n      setSave({ loading: false, data: null, error: e.message });\n    }\n  };\n  return saveTodo;\n};\n\nexport const useRemoveTodo = () => {\n  const setTodoList = useHawkSetState(todoListState);\n  const removeTodo = (todo: ITodo) => {\n    setTodoList((list) => list.filter((_todo) => todo !== _todo));\n    return todo;\n  };\n  return removeTodo;\n};\n\nexport const useToggleTodo = () => {\n  const setTodoList = useHawkSetState(todoListState);\n  const toggleTodo = (todo: ITodo) => {\n    setTodoList((list) =>\n      list\n        .slice(0)\n        .map((_todo) =>\n          todo !== _todo ? _todo : { ..._todo, complete: !_todo.complete }\n        )\n    );\n    return todo;\n  };\n  return toggleTodo;\n};\n\nexport const useUpdateTodo = () => {\n  const setUpdateText = useHawkSetState(updateTextState);\n  const setUpdating = useHawkSetState(updatingState);\n  const updateTodo = (todo: ITodo) => {\n    setUpdateText(todo.text);\n    setUpdating(todo);\n  };\n  return updateTodo;\n};\n\nexport const useCloseUpdate = () => {\n  const setUpdating = useHawkSetState(updatingState);\n  const closeUpdate = () => {\n    setUpdating(null);\n  };\n  return closeUpdate;\n};\n","\nimport React from 'react';\nimport { hawk, hawkeye, useHawkState, useHawkSetState } from 'react-hawk';\nimport Counter from '../Components/Counter'\n\nconst counterState = hawk({\n  key: 'counter',\n  default: 0\n});\n\nconst isEvenState = hawkeye({\n  key: 'isEven',\n  get: ({ get }) => {\n    const count = get(counterState)\n    return count % 2 ? 'odd' : 'even'\n  }\n})\n\nconst useIncrease = () => {\n  const setCounter = useHawkSetState(counterState)\n  const increase = (n = 1) => {\n    setCounter(count => count + n)\n  }\n  return increase\n}\n\nconst useDecrease = () => {\n  const setCounter = useHawkSetState(counterState)\n  const decrease = (n = 1) => {\n    setCounter(count => count - n)\n  }\n  return decrease\n}\n\nexport const HawkCounter = () => {\n  const count = useHawkState(counterState)\n  const even = useHawkState(isEvenState)\n  const decrease = useDecrease()\n  const increase = useIncrease()\n  return (\n    <Counter\n      title=\"Hawk Counter\"\n      value={count}\n      helperText={`${count} is ${even}`}\n      onIncrease={() => increase(1)}\n      onDecrease={() => decrease(1)}\n    />\n  );\n}","import React from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { ContextCounter, CounterProvider } from \"./ContextCounter\";\nimport { DataHocTodoList } from \"./DataHocTodos\";\nimport { RecoilTodoList } from \"./RecoilTodos\";\nimport { RecoilCounter } from \"./RecoilCounter\";\nimport { HawkTodoList } from \"./HawkTodos\";\nimport { HawkCounter } from \"./HawkCounter\";\nimport { RecoilRoot } from \"recoil\";\nimport { Typography } from \"@material-ui/core\";\n\nconst background =\n  \"linear-gradient(rgba(245, 0, 87, 0.8), rgba(63, 81, 181, 0.8))\";\n\nfunction App() {\n  return (\n    <>\n      <a href=\"https://github.com/rphansen91/react-hawk\" style={{ position: 'absolute', top: 0, right: 0 }}>\n        <img\n          width=\"149\"\n          height=\"149\"\n          src=\"https://github.blog/wp-content/uploads/2008/12/forkme_right_gray_6d6d6d.png?resize=149%2C149\"\n          className=\"attachment-full size-full\"\n          alt=\"Fork me on GitHub\"\n          data-recalc-dims=\"1\"\n        />\n      </a>\n      <Box\n        width=\"100%\"\n        style={{\n          padding: \"4em 2em\",\n          background,\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          flexDirection: \"column\",\n          boxSizing: 'border-box'\n        }}\n      >\n        <Typography variant=\"h2\" style={{ color: \"#fff\" }}>\n          Todo List\n        </Typography>\n        <Typography variant=\"h4\" style={{ color: \"#fff\" }}>\n          Context vs Recoil vs Hawk\n        </Typography>\n      </Box>\n      <Box p={3}>\n        <Grid container spacing={3}>\n          <Grid item xs={12} md={4}>\n            <DataHocTodoList />\n          </Grid>\n          <Grid item xs={12} md={4}>\n            <RecoilRoot>\n              <RecoilTodoList />\n            </RecoilRoot>\n          </Grid>\n          <Grid item xs={12} md={4}>\n            <RecoilRoot>\n              <HawkTodoList />\n            </RecoilRoot>\n          </Grid>\n          <Grid item xs={12} md={4}>\n            <CounterProvider>\n              <ContextCounter />\n            </CounterProvider>\n          </Grid>\n          <Grid item xs={12} md={4}>\n            <RecoilRoot>\n              <RecoilCounter />\n            </RecoilRoot>\n          </Grid>\n          <Grid item xs={12} md={4}>\n            <HawkCounter />\n          </Grid>\n        </Grid>\n      </Box>\n      <Box width=\"100%\" style={{ paddingTop: \"20%\", background }} />\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />,\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}